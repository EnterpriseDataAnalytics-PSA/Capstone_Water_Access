# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-03-01 23:47
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BooksAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=40)),
                ('email', models.CharField(max_length=254)),
            ],
            options={
                'db_table': 'books_author',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BooksBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('publication_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'books_book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BooksBookAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'books_book_authors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BooksPublisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=60)),
                ('state_province', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=50)),
                ('website', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'books_publisher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MusicWater',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_id', models.TextField(blank=True, null=True)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('water_source', models.TextField(blank=True, null=True)),
                ('water_tech', models.TextField(blank=True, null=True)),
                ('status_id', models.TextField(blank=True, null=True)),
                ('managment', models.TextField(blank=True, null=True)),
                ('pay', models.TextField(blank=True, null=True)),
                ('installer', models.TextField(blank=True, null=True)),
                ('install_year', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, null=True)),
                ('adm1', models.TextField(blank=True, null=True)),
                ('adm2', models.TextField(blank=True, null=True)),
                ('wpdx_id', models.TextField(blank=True, null=True)),
                ('report_date', models.TextField(blank=True, null=True)),
                ('country_id', models.TextField(blank=True, null=True)),
                ('activity_id', models.TextField(blank=True, null=True)),
                ('data_lnk', models.TextField(blank=True, null=True)),
                ('org_lnk', models.TextField(blank=True, null=True)),
                ('photo_lnk', models.TextField(blank=True, null=True)),
                ('converted', models.TextField(blank=True, null=True)),
                ('created', models.TextField(blank=True, null=True)),
                ('updated', models.TextField(blank=True, null=True)),
                ('lat_deg', models.TextField(blank=True, null=True)),
                ('lon_deg', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('count', models.TextField(blank=True, null=True)),
                ('fecal_coliform_presence', models.TextField(blank=True, null=True)),
                ('fecal_coliform_value', models.TextField(blank=True, null=True)),
                ('subjective_quality', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'music_water',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SwaziTest',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('row_id', models.TextField(blank=True, db_column='Row ID', null=True)),
                ('field_country_name', models.TextField(blank=True, db_column='#country_name', null=True)),
                ('field_water_source', models.TextField(blank=True, db_column='#water_source', null=True)),
                ('field_water_tech', models.TextField(blank=True, db_column='#water_tech', null=True)),
                ('field_status_id', models.TextField(blank=True, db_column='#status_id', null=True)),
                ('field_management', models.TextField(blank=True, db_column='#management', null=True)),
                ('field_pay', models.TextField(blank=True, db_column='#pay', null=True)),
                ('field_installer', models.TextField(blank=True, db_column='#installer', null=True)),
                ('field_install_year', models.TextField(blank=True, db_column='#install_year', null=True)),
                ('field_status', models.TextField(blank=True, db_column='#status', null=True)),
                ('field_source', models.TextField(blank=True, db_column='#source', null=True)),
                ('field_adm1', models.TextField(blank=True, db_column='#adm1', null=True)),
                ('field_adm2', models.TextField(blank=True, db_column='#adm2', null=True)),
                ('field_wpdx_id', models.TextField(blank=True, db_column='#wpdx_id', null=True)),
                ('field_report_date', models.TextField(blank=True, db_column='#report_date', null=True)),
                ('field_country_id', models.TextField(blank=True, db_column='#country_id', null=True)),
                ('field_activity_id', models.TextField(blank=True, db_column='#activity_id', null=True)),
                ('field_data_link', models.TextField(blank=True, db_column='#data_link', null=True)),
                ('field_orig_lnk', models.TextField(blank=True, db_column='#orig_lnk', null=True)),
                ('photo_lnk', models.TextField(blank=True, null=True)),
                ('field_converted', models.TextField(blank=True, db_column='#converted', null=True)),
                ('field_created', models.TextField(blank=True, db_column='#created', null=True)),
                ('field_updated', models.TextField(blank=True, db_column='#updated', null=True)),
                ('field_lat_deg', models.TextField(blank=True, db_column='#lat_deg', null=True)),
                ('field_long_deg', models.TextField(blank=True, db_column='#long_deg', null=True)),
                ('location', models.TextField(blank=True, db_column='Location', null=True)),
                ('count', models.TextField(blank=True, db_column='Count', null=True)),
                ('field_fecal_coliform_presence', models.TextField(blank=True, db_column='#fecal_coliform_presence', null=True)),
                ('field_fecal_coliform_value', models.TextField(blank=True, db_column='#fecal_coliform_value', null=True)),
                ('field_subjective_quality', models.TextField(blank=True, db_column='#subjective_quality', null=True)),
                ('number_1_km_population', models.TextField(blank=True, db_column='1 km population', null=True)),
            ],
            options={
                'db_table': 'swazi_test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Water',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_id', models.TextField(blank=True, null=True)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('water_source', models.TextField(blank=True, null=True)),
                ('water_tech', models.TextField(blank=True, null=True)),
                ('status_id', models.TextField(blank=True, null=True)),
                ('management', models.TextField(blank=True, null=True)),
                ('pay', models.TextField(blank=True, null=True)),
                ('installer', models.TextField(blank=True, null=True)),
                ('install_year', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, null=True)),
                ('adm1', models.TextField(blank=True, null=True)),
                ('adm2', models.TextField(blank=True, null=True)),
                ('wpdx_id', models.TextField(blank=True, null=True)),
                ('report_date', models.TextField(blank=True, null=True)),
                ('country_id', models.TextField(blank=True, null=True)),
                ('activity_id', models.TextField(blank=True, null=True)),
                ('data_lnk', models.TextField(blank=True, null=True)),
                ('org_lnk', models.TextField(blank=True, null=True)),
                ('photo_lnk', models.TextField(blank=True, null=True)),
                ('converted', models.TextField(blank=True, null=True)),
                ('created', models.TextField(blank=True, null=True)),
                ('updated', models.TextField(blank=True, null=True)),
                ('lat_deg', models.TextField(blank=True, null=True)),
                ('lon_deg', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('count', models.TextField(blank=True, null=True)),
                ('fecal_coliform_presence', models.TextField(blank=True, null=True)),
                ('fecal_coliform_value', models.TextField(blank=True, null=True)),
                ('subjective_quality', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'water',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaterDjango',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row_id', models.TextField(blank=True, null=True)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('water_source', models.TextField(blank=True, null=True)),
                ('water_tech', models.TextField(blank=True, null=True)),
                ('status_id', models.TextField(blank=True, null=True)),
                ('management', models.TextField(blank=True, null=True)),
                ('pay', models.TextField(blank=True, null=True)),
                ('installer', models.TextField(blank=True, null=True)),
                ('install_year', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, null=True)),
                ('adm1', models.TextField(blank=True, null=True)),
                ('adm2', models.TextField(blank=True, null=True)),
                ('wpdx_id', models.TextField(blank=True, null=True)),
                ('report_date', models.TextField(blank=True, null=True)),
                ('country_id', models.TextField(blank=True, null=True)),
                ('activity_id', models.TextField(blank=True, null=True)),
                ('data_lnk', models.TextField(blank=True, null=True)),
                ('org_lnk', models.TextField(blank=True, null=True)),
                ('photo_lnk', models.TextField(blank=True, null=True)),
                ('converted', models.TextField(blank=True, null=True)),
                ('created', models.TextField(blank=True, null=True)),
                ('updated', models.TextField(blank=True, null=True)),
                ('lat_deg', models.TextField(blank=True, null=True)),
                ('lon_deg', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('count1', models.TextField(blank=True, null=True)),
                ('fecal_coliform_presence', models.TextField(blank=True, null=True)),
                ('fecal_coliform_value', models.TextField(blank=True, null=True)),
                ('subjective_quality', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'water_django',
                'managed': False,
            },
        ),
    ]
